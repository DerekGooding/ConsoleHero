name: Publish .NET Package to NuGet

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0'

      - name: Get the version from the .csproj file
        id: get_version
        run: |
          VERSION=$(cat ConsoleHero/ConsoleHero.csproj | grep -oPm1 "(?<=<Version>)[^<]+")
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Get the latest published version from NuGet
        id: get_latest_version
        run: |
          LATEST_VERSION=$(curl -s https://api.nuget.org/v3-flatcontainer/consolehero/index.json | jq -r '.versions | last')
          echo "LATEST_VERSION=$LATEST_VERSION" >> $GITHUB_ENV

      - name: Compare versions
        id: version_check
        run: |
          if [ "$VERSION" != "$LATEST_VERSION" ]; then
            echo "New version detected: $VERSION"
            echo "run_publish=true" >> $GITHUB_ENV
          else
            echo "No new version detected"
            echo "run_publish=false" >> $GITHUB_ENV
          fi

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build --configuration Release --no-restore

      - name: Pack the NuGet package
        run: dotnet pack --configuration Release --no-build --output ./nupkg

      - name: Publish to NuGet
        if: env.run_publish == 'true'
        run: dotnet nuget push ./nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
